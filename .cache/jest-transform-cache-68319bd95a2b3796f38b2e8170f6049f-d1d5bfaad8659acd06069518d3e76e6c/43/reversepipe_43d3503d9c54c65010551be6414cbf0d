196dba69679337e9fd3ffc6b4876c667
"use strict";

/* istanbul ignore next */
function cov_iujop4zp() {
  var path = "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@shared/pipes/reverse.pipe.ts";
  var hash = "14e0ed33a4e1c289232e5ee87810e5aee7fa0072";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@shared/pipes/reverse.pipe.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "6": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "7": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "8": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "9": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "10": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "11": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 22
        }
      },
      "12": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "13": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 12,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 12,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@shared/pipes/reverse.pipe.ts",
      mappings: ";;;;AAAA,wCAAoD;AAEpD,qBAAqB;AAMrB,IAAa,cAAc;AAD3B,aAAa;AACb,MAAa,cAAc;IACzB,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,KAAK,SAAS;YAAE,OAAO,EAAE,CAAC;QAEnC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1C,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAC3B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF,CAAA;AAXY,cAAc;IAL1B,WAAI,CAAC;QACJ,IAAI,EAAE,YAAY;KACnB,CAAC;IAEF,aAAa;GACA,cAAc,CAW1B;AAXY,wCAAc",
      names: [],
      sources: ["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@shared/pipes/reverse.pipe.ts"],
      sourcesContent: ["import { Pipe, PipeTransform } from \"@angular/core\";\n\n// Annotation section\n@Pipe({\n  name: \"reverseStr\",\n})\n\n// Pipe class\nexport class ReverseStrPipe implements PipeTransform {\n  transform(value: string): string {\n    if (value === undefined) return \"\";\n\n    let newStr = \"\";\n    for (let i = value.length - 1; i >= 0; i--) {\n      newStr += value.charAt(i);\n    }\n\n    return newStr;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "14e0ed33a4e1c289232e5ee87810e5aee7fa0072"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_iujop4zp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_iujop4zp();
cov_iujop4zp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_iujop4zp().s[1]++;
exports.ReverseStrPipe = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_iujop4zp().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_iujop4zp().s[3]++, require("@angular/core")); // Annotation section

/* istanbul ignore next */
cov_iujop4zp().s[4]++;
let ReverseStrPipe = // Pipe class
class ReverseStrPipe {
  transform(value) {
    /* istanbul ignore next */
    cov_iujop4zp().f[0]++;
    cov_iujop4zp().s[5]++;

    if (value === undefined) {
      /* istanbul ignore next */
      cov_iujop4zp().b[0][0]++;
      cov_iujop4zp().s[6]++;
      return "";
    } else
    /* istanbul ignore next */
    {
      cov_iujop4zp().b[0][1]++;
    }

    let newStr =
    /* istanbul ignore next */
    (cov_iujop4zp().s[7]++, "");

    /* istanbul ignore next */
    cov_iujop4zp().s[8]++;

    for (let i =
    /* istanbul ignore next */
    (cov_iujop4zp().s[9]++, value.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_iujop4zp().s[10]++;
      newStr += value.charAt(i);
    }

    /* istanbul ignore next */
    cov_iujop4zp().s[11]++;
    return newStr;
  }

};

/* istanbul ignore next */
cov_iujop4zp().s[12]++;
ReverseStrPipe = tslib_1.__decorate([core_1.Pipe({
  name: "reverseStr"
}) // Pipe class
], ReverseStrPipe);

/* istanbul ignore next */
cov_iujop4zp().s[13]++;
exports.ReverseStrPipe = ReverseStrPipe;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sLmt1emVua28vUEVSU09OQUwvbmctc3RhcnQvc3JjL2FwcC9Ac2hhcmVkL3BpcGVzL3JldmVyc2UucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWZMLE1BQUEsTUFBQTtBQUFBO0FBQUEsd0JBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLEMsQ0FFQTs7OztBQU1BLElBQWEsY0FBYyxHQUQzQjtBQUNBLE1BQWEsY0FBYixDQUEyQjtBQUN6QixFQUFBLFNBQVMsQ0FBQyxLQUFELEVBQWM7QUFBQTtBQUFBO0FBQUE7O0FBQ3JCLFFBQUksS0FBSyxLQUFLLFNBQWQsRUFBeUI7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUFPLEVBQVA7QUFBVSxLQUFuQztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBLFFBQUksTUFBTTtBQUFBO0FBQUEsNEJBQUcsRUFBSCxDQUFWOztBQUhxQjtBQUFBOztBQUlyQixTQUFLLElBQUksQ0FBQztBQUFBO0FBQUEsNEJBQUcsS0FBSyxDQUFDLE1BQU4sR0FBZSxDQUFsQixDQUFWLEVBQStCLENBQUMsSUFBSSxDQUFwQyxFQUF1QyxDQUFDLEVBQXhDLEVBQTRDO0FBQUE7QUFBQTtBQUMxQyxNQUFBLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTixDQUFhLENBQWIsQ0FBVjtBQUNEOztBQU5vQjtBQUFBO0FBUXJCLFdBQU8sTUFBUDtBQUNEOztBQVZ3QixDQUEzQjs7OztBQUFhLGNBQWMsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBTDFCLE1BQUEsQ0FBQSxJQUFBLENBQUs7QUFDSixFQUFBLElBQUksRUFBRTtBQURGLENBQUwsQ0FLMEIsQ0FEM0I7QUFDMkIsQ0FBQSxFQUFkLGNBQWMsQ0FBZDs7OztBQUFBLE9BQUEsQ0FBQSxjQUFBLEdBQUEsY0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG4vLyBBbm5vdGF0aW9uIHNlY3Rpb25cbkBQaXBlKHtcbiAgbmFtZTogXCJyZXZlcnNlU3RyXCIsXG59KVxuXG4vLyBQaXBlIGNsYXNzXG5leHBvcnQgY2xhc3MgUmV2ZXJzZVN0clBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gXCJcIjtcblxuICAgIGxldCBuZXdTdHIgPSBcIlwiO1xuICAgIGZvciAobGV0IGkgPSB2YWx1ZS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgbmV3U3RyICs9IHZhbHVlLmNoYXJBdChpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3U3RyO1xuICB9XG59XG4iXX0=