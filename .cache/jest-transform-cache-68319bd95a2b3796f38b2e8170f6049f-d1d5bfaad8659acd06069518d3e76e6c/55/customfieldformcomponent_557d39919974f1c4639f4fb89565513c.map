{"version":3,"sources":["/Users/l.kuzenko/PERSONAL/ng-start/src/app/forms/components/custom-field-form/custom-field-form.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBiB;;;;;;;;;;;;;;;;;;;;AAnBjB,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,OAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;;;AAQA,IAAa,wBAAwB,GAArC,MAAa,wBAAb,CAAqC;AAArC,EAAA,WAAA,GAAA;AAAA;AAAA;AAAA;AACkB,SAAA,IAAA,GAA4B;AAAE,MAAA,OAAO,EAAE;AAAX,KAA5B;;AADlB;AAAA;AAGS,SAAA,QAAA,GAAW,CAAX;;AAHT;AAAA;AAIS,SAAA,QAAA,GAAW,EAAX;;AAJT;AAAA;AAMS,SAAA,IAAA,GAAkB,IAAI,OAAA,CAAA,SAAJ,CAAc;AACrC,MAAA,OAAO,EAAE,IAAI,OAAA,CAAA,WAAJ,CAAgB,KAAK,IAAL,CAAU,OAA1B,EAAmC,EAAnC;AAD4B,KAAd,CAAlB;AAUR;;AANQ,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;;AACb,QAAI,KAAK,IAAL,CAAU,KAAd,EAAqB;AAAA;AAAA;AACnB,YAAM,SAAS;AAAA;AAAA,iCAAG,KAAK,IAAL,CAAU,WAAV,EAAH,CAAf;;AADmB;AAAA;AAEnB,MAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAID;;AAfkC,CAArC;;;;;AACW,OAAA,CAAA,UAAA,CAAA,CAAR,MAAA,CAAA,KAAA,EAAQ,E,yCAAA,CAAA,E,kCAAA,E,MAAA,E,KAAkD,CAAlD;;;;AADE,wBAAwB,GAAA,OAAA,CAAA,UAAA,CAAA,CANpC,MAAA,CAAA,SAAA,CAAU;AACT,EAAA,QAAQ,EAAE,sBADD;AAET,EAAA,QAAA,EAAA,OAAA,CAAa,oCAAb,CAFS;AAGT,EAAA,SAAS,EAAA,EAHA;AAIT,EAAA,eAAe,EAAE,MAAA,CAAA,uBAAA,CAAwB;AAJhC,CAAV,CAMoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;AAAA,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourcesContent":["import { Component, Input, ChangeDetectionStrategy } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"bb-custom-field-form\",\n  templateUrl: \"./custom-field-form.component.html\",\n  styleUrls: [\"./custom-field-form.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomFieldFormComponent {\n  @Input() public data: { counter: number } = { counter: 7 };\n\n  public minValue = 0;\n  public maxValue = 12;\n\n  public form: FormGroup = new FormGroup({\n    counter: new FormControl(this.data.counter, []),\n  });\n\n  public onSubmit() {\n    if (this.form.valid) {\n      const formValue = this.form.getRawValue();\n      console.log(formValue);\n    }\n  }\n}\n"]}