5853c208c608f860e36a10a8c6bfc082
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/no-unused-vars */
const testing_1 = require("@angular/core/testing");
const forms_1 = require("@angular/forms");
const validation_message_component_1 = require("./validation-message.component");
const format_error_message_pipe_1 = require("./format-error-message.pipe");
describe("[VALIDATION] ValidationMessageComponent", () => {
    let component;
    let fixture;
    beforeEach(testing_1.waitForAsync(() => {
        testing_1.TestBed.configureTestingModule({
            imports: [],
            declarations: [validation_message_component_1.ValidationMessageComponent, format_error_message_pipe_1.FormatErrorMessagePipe],
        }).compileComponents();
    }));
    beforeEach(() => {
        fixture = testing_1.TestBed.createComponent(validation_message_component_1.ValidationMessageComponent);
        component = fixture.componentInstance;
        component.control = new forms_1.FormControl(null);
        fixture.detectChanges();
    });
    it("ValidationMessageComponent should create", () => {
        expect(component).toBeTruthy();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2wua3V6ZW5rby9QRVJTT05BTC9uZy1zdGFydC9zcmMvYXBwL0BzaGFyZWQvbW9kdWxlcy92YWxpZGF0aW9uLW1lc3NhZ2UvdmFsaWRhdGlvbi1tZXNzYWdlLmNvbXBvbmVudC5zcGVjLnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsc0RBQXNEO0FBQ3RELG1EQUFnRjtBQUNoRiwwQ0FBNkM7QUFFN0MsaUZBQTRFO0FBQzVFLDJFQUFxRTtBQUVyRSxRQUFRLENBQUMseUNBQXlDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZELElBQUksU0FBcUMsQ0FBQztJQUMxQyxJQUFJLE9BQXFELENBQUM7SUFFMUQsVUFBVSxDQUNSLHNCQUFZLENBQUMsR0FBRyxFQUFFO1FBQ2hCLGlCQUFPLENBQUMsc0JBQXNCLENBQUM7WUFDN0IsT0FBTyxFQUFFLEVBQUU7WUFDWCxZQUFZLEVBQUUsQ0FBQyx5REFBMEIsRUFBRSxrREFBc0IsQ0FBQztTQUNuRSxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUN6QixDQUFDLENBQUMsQ0FDSCxDQUFDO0lBRUYsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNkLE9BQU8sR0FBRyxpQkFBTyxDQUFDLGVBQWUsQ0FBQyx5REFBMEIsQ0FBQyxDQUFDO1FBQzlELFNBQVMsR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUM7UUFDdEMsU0FBUyxDQUFDLE9BQU8sR0FBRyxJQUFJLG1CQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzFCLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDBDQUEwQyxFQUFFLEdBQUcsRUFBRTtRQUNsRCxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDakMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbC5rdXplbmtvL1BFUlNPTkFML25nLXN0YXJ0L3NyYy9hcHAvQHNoYXJlZC9tb2R1bGVzL3ZhbGlkYXRpb24tbWVzc2FnZS92YWxpZGF0aW9uLW1lc3NhZ2UuY29tcG9uZW50LnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzICovXG5pbXBvcnQgeyBDb21wb25lbnRGaXh0dXJlLCBUZXN0QmVkLCB3YWl0Rm9yQXN5bmMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZS90ZXN0aW5nXCI7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuXG5pbXBvcnQgeyBWYWxpZGF0aW9uTWVzc2FnZUNvbXBvbmVudCB9IGZyb20gXCIuL3ZhbGlkYXRpb24tbWVzc2FnZS5jb21wb25lbnRcIjtcbmltcG9ydCB7IEZvcm1hdEVycm9yTWVzc2FnZVBpcGUgfSBmcm9tIFwiLi9mb3JtYXQtZXJyb3ItbWVzc2FnZS5waXBlXCI7XG5cbmRlc2NyaWJlKFwiW1ZBTElEQVRJT05dIFZhbGlkYXRpb25NZXNzYWdlQ29tcG9uZW50XCIsICgpID0+IHtcbiAgbGV0IGNvbXBvbmVudDogVmFsaWRhdGlvbk1lc3NhZ2VDb21wb25lbnQ7XG4gIGxldCBmaXh0dXJlOiBDb21wb25lbnRGaXh0dXJlPFZhbGlkYXRpb25NZXNzYWdlQ29tcG9uZW50PjtcblxuICBiZWZvcmVFYWNoKFxuICAgIHdhaXRGb3JBc3luYygoKSA9PiB7XG4gICAgICBUZXN0QmVkLmNvbmZpZ3VyZVRlc3RpbmdNb2R1bGUoe1xuICAgICAgICBpbXBvcnRzOiBbXSxcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbVmFsaWRhdGlvbk1lc3NhZ2VDb21wb25lbnQsIEZvcm1hdEVycm9yTWVzc2FnZVBpcGVdLFxuICAgICAgfSkuY29tcGlsZUNvbXBvbmVudHMoKTtcbiAgICB9KSxcbiAgKTtcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBmaXh0dXJlID0gVGVzdEJlZC5jcmVhdGVDb21wb25lbnQoVmFsaWRhdGlvbk1lc3NhZ2VDb21wb25lbnQpO1xuICAgIGNvbXBvbmVudCA9IGZpeHR1cmUuY29tcG9uZW50SW5zdGFuY2U7XG4gICAgY29tcG9uZW50LmNvbnRyb2wgPSBuZXcgRm9ybUNvbnRyb2wobnVsbCk7XG4gICAgZml4dHVyZS5kZXRlY3RDaGFuZ2VzKCk7XG4gIH0pO1xuXG4gIGl0KFwiVmFsaWRhdGlvbk1lc3NhZ2VDb21wb25lbnQgc2hvdWxkIGNyZWF0ZVwiLCAoKSA9PiB7XG4gICAgZXhwZWN0KGNvbXBvbmVudCkudG9CZVRydXRoeSgpO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9