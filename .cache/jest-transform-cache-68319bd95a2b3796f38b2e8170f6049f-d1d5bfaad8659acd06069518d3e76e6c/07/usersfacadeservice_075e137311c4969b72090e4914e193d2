68d2344b2c9fd51d1c3b926349414b81
"use strict";

/* istanbul ignore next */
function cov_qefnw771a() {
  var path = "/Users/l.kuzenko/PERSONAL/ng-start/src/app/users/services/users-facade.service.ts";
  var hash = "a18bfafe897c3a5819b3ab5167d84337bde3bb9f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/users/services/users-facade.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "5": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 14,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 44
        }
      },
      "8": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 18,
          column: 23
        }
      },
      "9": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/users/services/users-facade.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAE3C,mDAA+C;AAI/C,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAC7B,YAA6B,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAEpD,QAAQ;QACb,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IACtC,CAAC;CACF,CAAA;AANY,kBAAkB;IAD9B,iBAAU,EAAE;6CAEgC,4BAAY;GAD5C,kBAAkB,CAM9B;AANY,gDAAkB",
      names: [],
      sources: ["/Users/l.kuzenko/PERSONAL/ng-start/src/app/users/services/users-facade.service.ts"],
      sourcesContent: ["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { UsersService } from \"./users.service\";\nimport { User } from \"../interfaces\";\n\n@Injectable()\nexport class UsersFacadeService {\n  constructor(private readonly usersService: UsersService) {}\n\n  public getUsers(): Observable<User[]> {\n    return this.usersService.getUsers();\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a18bfafe897c3a5819b3ab5167d84337bde3bb9f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qefnw771a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_qefnw771a();
cov_qefnw771a().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_qefnw771a().s[1]++;
exports.UsersFacadeService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_qefnw771a().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_qefnw771a().s[3]++, require("@angular/core"));
const users_service_1 =
/* istanbul ignore next */
(cov_qefnw771a().s[4]++, require("./users.service"));

/* istanbul ignore next */
cov_qefnw771a().s[5]++;
let UsersFacadeService = class UsersFacadeService {
  constructor(usersService) {
    /* istanbul ignore next */
    cov_qefnw771a().f[0]++;
    cov_qefnw771a().s[6]++;
    this.usersService = usersService;
  }

  getUsers() {
    /* istanbul ignore next */
    cov_qefnw771a().f[1]++;
    cov_qefnw771a().s[7]++;
    return this.usersService.getUsers();
  }

};

/* istanbul ignore next */
cov_qefnw771a().s[8]++;
UsersFacadeService = tslib_1.__decorate([core_1.Injectable(), tslib_1.__metadata("design:paramtypes", [users_service_1.UsersService])], UsersFacadeService);

/* istanbul ignore next */
cov_qefnw771a().s[9]++;
exports.UsersFacadeService = UsersFacadeService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sLmt1emVua28vUEVSU09OQUwvbmctc3RhcnQvc3JjL2FwcC91c2Vycy9zZXJ2aWNlcy91c2Vycy1mYWNhZGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTEQsTUFBQSxNQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFFQSxNQUFBLGVBQUE7QUFBQTtBQUFBLHlCQUFBLE9BQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUE7Ozs7QUFJQSxJQUFhLGtCQUFrQixHQUEvQixNQUFhLGtCQUFiLENBQStCO0FBQzdCLEVBQUEsV0FBQSxDQUE2QixZQUE3QixFQUF1RDtBQUFBO0FBQUE7QUFBQTtBQUExQixTQUFBLFlBQUEsR0FBQSxZQUFBO0FBQThCOztBQUVwRCxFQUFBLFFBQVEsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNiLFdBQU8sS0FBSyxZQUFMLENBQWtCLFFBQWxCLEVBQVA7QUFDRDs7QUFMNEIsQ0FBL0I7Ozs7QUFBYSxrQkFBa0IsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBRDlCLE1BQUEsQ0FBQSxVQUFBLEVBQzhCLEUseUNBQ2MsZUFBQSxDQUFBLFksRUFEZCxDQUFBLEVBQWxCLGtCQUFrQixDQUFsQjs7OztBQUFBLE9BQUEsQ0FBQSxrQkFBQSxHQUFBLGtCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IFVzZXJzU2VydmljZSB9IGZyb20gXCIuL3VzZXJzLnNlcnZpY2VcIjtcbmltcG9ydCB7IFVzZXIgfSBmcm9tIFwiLi4vaW50ZXJmYWNlc1wiO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVXNlcnNGYWNhZGVTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSB1c2Vyc1NlcnZpY2U6IFVzZXJzU2VydmljZSkge31cblxuICBwdWJsaWMgZ2V0VXNlcnMoKTogT2JzZXJ2YWJsZTxVc2VyW10+IHtcbiAgICByZXR1cm4gdGhpcy51c2Vyc1NlcnZpY2UuZ2V0VXNlcnMoKTtcbiAgfVxufVxuIl19