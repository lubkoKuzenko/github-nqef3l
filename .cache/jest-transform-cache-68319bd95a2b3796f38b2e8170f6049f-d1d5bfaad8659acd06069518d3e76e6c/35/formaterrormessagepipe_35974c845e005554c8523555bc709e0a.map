{"version":3,"sources":["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@shared/modules/validation-message/format-error-message.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBM;;;;;;;;;;;;;;;;;;;;AAhBN,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;AAKA,IAAa,sBAAsB,GAAnC,MAAa,sBAAb,CAAmC;AACjC,EAAA,WAAA,GAAA;AAAA;AAAA;AAAgB;;AACT,EAAA,SAAS,CAAC,eAAD,EAA6C;AAAA;AAAA;AAAA;AAC3D,WAAO,KAAK,wBAAL,CAA8B,eAAe,CAAC,GAA9C,EAAmD,eAAe,CAAC,KAAnE,CAAP;AACD;;AAEO,EAAA,wBAAwB,CAAC,aAAD,EAAwB,cAAxB,EAA4C;AAAA;AAAA;AAC1E,UAAM,MAAM;AAAA;AAAA,8BAAQ;AAClB,MAAA,QAAQ,EAAE,iCADQ;AAElB,MAAA,SAAS,EAAE,kBAAkB,cAAc,CAAC,cAAc,EAFxC;AAGlB,MAAA,SAAS,EAAE,kBAAkB,cAAc,CAAC,cAAc,EAHxC;AAIlB,MAAA,GAAG,EAAE,oBAAoB,cAAc,CAAC,GAAG,EAJzB;AAKlB,MAAA,GAAG,EAAE,qCAAqC,cAAc,CAAC,GAAG,EAL1C;AAMlB,MAAA,OAAO,EAAE,gCANS;AAOlB,MAAA,SAAS,EAAE,yBAPO;AAQlB,MAAA,mBAAmB,EAAE;AARH,KAAR,CAAZ;;AAD0E;AAAA;AAY1E,WAAO,MAAM,CAAC,aAAD,CAAb;AACD;;AAnBgC,CAAnC;;;;AAAa,sBAAsB,GAAA,OAAA,CAAA,UAAA,CAAA,CAHlC,MAAA,CAAA,IAAA,CAAK;AACJ,EAAA,IAAI,EAAE;AADF,CAAL,CAGkC,E,2CAAA,CAAA,EAAtB,sBAAsB,CAAtB;;;;AAAA,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"formatErrorMessage\",\n})\nexport class FormatErrorMessagePipe implements PipeTransform {\n  constructor() {}\n  public transform(validationError: { key: string; value: any }): any {\n    return this.getFormattedErrorMessage(validationError.key, validationError.value);\n  }\n\n  private getFormattedErrorMessage(validatorName: string, validatorValue?: any) {\n    const config: any = {\n      required: \"This field cannot be left blank\",\n      minlength: `Minimum length ${validatorValue.requiredLength}`,\n      maxlength: `Maximum length ${validatorValue.requiredLength}`,\n      min: `Minimum value is ${validatorValue.min}`,\n      max: `Maximum value should be less then ${validatorValue.max}`,\n      pattern: \"Control has leading whitespace\",\n      rangeDate: \"Date range is not valid\",\n      wrongPasswordFormat: \"Password is not valid\",\n    };\n\n    return config[validatorName];\n  }\n}\n"]}