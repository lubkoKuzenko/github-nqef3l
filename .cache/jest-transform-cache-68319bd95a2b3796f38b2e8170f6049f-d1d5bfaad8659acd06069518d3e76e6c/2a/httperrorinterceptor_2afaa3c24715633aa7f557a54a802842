8799511ed3113e08147c1953830d8833
"use strict";

/* istanbul ignore next */
function cov_1tq4679uh8() {
  var path = "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/http-error.interceptor.ts";
  var hash = "ea1fd9e1b3ab563a23a34898aaaa8dda6599bef0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/http-error.interceptor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 38
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 65
        }
      },
      "6": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 43
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 17,
          column: 12
        }
      },
      "10": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "11": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 25,
          column: 25
        }
      },
      "12": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 84
          },
          end: {
            line: 15,
            column: 85
          }
        },
        loc: {
          start: {
            line: 15,
            column: 90
          },
          end: {
            line: 17,
            column: 9
          }
        },
        line: 15
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/http-error.interceptor.ts",
      mappings: ";;;;AAAA,wCAA2C;AAG3C,8CAAiD;AAEjD,kEAA8D;AAK9D,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC/B,YAAmB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEnD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjC,kEAAkE;QAClE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,iBAAK,CAAC,CAAC,CAAC,EACR,oBAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF,CAAA;AAbY,oBAAoB;IAHhC,iBAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;6CAEkC,8BAAa;GADpC,oBAAoB,CAahC;AAbY,oDAAoB",
      names: [],
      sources: ["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/http-error.interceptor.ts"],
      sourcesContent: ["import { Injectable } from \"@angular/core\";\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { finalize, retry } from \"rxjs/operators\";\n\nimport { LoaderService } from \"@core/services/loader.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(public loaderService: LoaderService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.loaderService.display(true);\n    // If the call fails, retry until 2 times before throwing an error\n    return next.handle(request).pipe(\n      retry(2),\n      finalize(() => {\n        this.loaderService.display(false);\n      }),\n    );\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ea1fd9e1b3ab563a23a34898aaaa8dda6599bef0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tq4679uh8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1tq4679uh8();
cov_1tq4679uh8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1tq4679uh8().s[1]++;
exports.HttpErrorInterceptor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1tq4679uh8().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1tq4679uh8().s[3]++, require("@angular/core"));
const operators_1 =
/* istanbul ignore next */
(cov_1tq4679uh8().s[4]++, require("rxjs/operators"));
const loader_service_1 =
/* istanbul ignore next */
(cov_1tq4679uh8().s[5]++, require("@core/services/loader.service"));

/* istanbul ignore next */
cov_1tq4679uh8().s[6]++;
let HttpErrorInterceptor = class HttpErrorInterceptor {
  constructor(loaderService) {
    /* istanbul ignore next */
    cov_1tq4679uh8().f[0]++;
    cov_1tq4679uh8().s[7]++;
    this.loaderService = loaderService;
  }

  intercept(request, next) {
    /* istanbul ignore next */
    cov_1tq4679uh8().f[1]++;
    cov_1tq4679uh8().s[8]++;
    this.loaderService.display(true); // If the call fails, retry until 2 times before throwing an error

    /* istanbul ignore next */
    cov_1tq4679uh8().s[9]++;
    return next.handle(request).pipe(operators_1.retry(2), operators_1.finalize(() => {
      /* istanbul ignore next */
      cov_1tq4679uh8().f[2]++;
      cov_1tq4679uh8().s[10]++;
      this.loaderService.display(false);
    }));
  }

};

/* istanbul ignore next */
cov_1tq4679uh8().s[11]++;
HttpErrorInterceptor = tslib_1.__decorate([core_1.Injectable({
  providedIn: "root"
}), tslib_1.__metadata("design:paramtypes", [loader_service_1.LoaderService])], HttpErrorInterceptor);

/* istanbul ignore next */
cov_1tq4679uh8().s[12]++;
exports.HttpErrorInterceptor = HttpErrorInterceptor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sLmt1emVua28vUEVSU09OQUwvbmctc3RhcnQvc3JjL2FwcC9AY29yZS9pbnRlcmNlcHRvci9odHRwLWVycm9yLmludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJROzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW5CUixNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUdBLE1BQUEsV0FBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQTtBQUVBLE1BQUEsZ0JBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSwrQkFBQSxDQUFBLENBQUE7Ozs7QUFLQSxJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFiLENBQWlDO0FBQy9CLEVBQUEsV0FBQSxDQUFtQixhQUFuQixFQUErQztBQUFBO0FBQUE7QUFBQTtBQUE1QixTQUFBLGFBQUEsR0FBQSxhQUFBO0FBQWdDOztBQUVuRCxFQUFBLFNBQVMsQ0FBQyxPQUFELEVBQTRCLElBQTVCLEVBQTZDO0FBQUE7QUFBQTtBQUFBO0FBQ3BELFNBQUssYUFBTCxDQUFtQixPQUFuQixDQUEyQixJQUEzQixFQURvRCxDQUVwRDs7QUFGb0Q7QUFBQTtBQUdwRCxXQUFPLElBQUksQ0FBQyxNQUFMLENBQVksT0FBWixFQUFxQixJQUFyQixDQUNMLFdBQUEsQ0FBQSxLQUFBLENBQU0sQ0FBTixDQURLLEVBRUwsV0FBQSxDQUFBLFFBQUEsQ0FBUyxNQUFLO0FBQUE7QUFBQTtBQUFBO0FBQ1osV0FBSyxhQUFMLENBQW1CLE9BQW5CLENBQTJCLEtBQTNCO0FBQ0QsS0FGRCxDQUZLLENBQVA7QUFNRDs7QUFaOEIsQ0FBakM7Ozs7QUFBYSxvQkFBb0IsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBSGhDLE1BQUEsQ0FBQSxVQUFBLENBQVc7QUFDVixFQUFBLFVBQVUsRUFBRTtBQURGLENBQVgsQ0FHZ0MsRSx5Q0FDRyxnQkFBQSxDQUFBLGEsRUFESCxDQUFBLEVBQXBCLG9CQUFvQixDQUFwQjs7OztBQUFBLE9BQUEsQ0FBQSxvQkFBQSxHQUFBLG9CQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBIdHRwRXZlbnQsIEh0dHBJbnRlcmNlcHRvciwgSHR0cEhhbmRsZXIsIEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IGZpbmFsaXplLCByZXRyeSB9IGZyb20gXCJyeGpzL29wZXJhdG9yc1wiO1xuXG5pbXBvcnQgeyBMb2FkZXJTZXJ2aWNlIH0gZnJvbSBcIkBjb3JlL3NlcnZpY2VzL2xvYWRlci5zZXJ2aWNlXCI7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogXCJyb290XCIsXG59KVxuZXhwb3J0IGNsYXNzIEh0dHBFcnJvckludGVyY2VwdG9yIGltcGxlbWVudHMgSHR0cEludGVyY2VwdG9yIHtcbiAgY29uc3RydWN0b3IocHVibGljIGxvYWRlclNlcnZpY2U6IExvYWRlclNlcnZpY2UpIHt9XG5cbiAgaW50ZXJjZXB0KHJlcXVlc3Q6IEh0dHBSZXF1ZXN0PGFueT4sIG5leHQ6IEh0dHBIYW5kbGVyKTogT2JzZXJ2YWJsZTxIdHRwRXZlbnQ8YW55Pj4ge1xuICAgIHRoaXMubG9hZGVyU2VydmljZS5kaXNwbGF5KHRydWUpO1xuICAgIC8vIElmIHRoZSBjYWxsIGZhaWxzLCByZXRyeSB1bnRpbCAyIHRpbWVzIGJlZm9yZSB0aHJvd2luZyBhbiBlcnJvclxuICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXF1ZXN0KS5waXBlKFxuICAgICAgcmV0cnkoMiksXG4gICAgICBmaW5hbGl6ZSgoKSA9PiB7XG4gICAgICAgIHRoaXMubG9hZGVyU2VydmljZS5kaXNwbGF5KGZhbHNlKTtcbiAgICAgIH0pLFxuICAgICk7XG4gIH1cbn1cbiJdfQ==