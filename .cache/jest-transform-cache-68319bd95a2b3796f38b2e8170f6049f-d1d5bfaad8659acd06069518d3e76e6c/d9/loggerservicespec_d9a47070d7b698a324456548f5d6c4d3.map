{"file":"/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/services/logger.service.spec.ts","mappings":"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","names":[],"sources":["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/services/logger.service.spec.ts"],"sourcesContent":["/* eslint no-console: 0 */\nimport { Logger, LogLevel, LogOutput } from \"./logger.service\";\n\nconst logMethods = [\"log\", \"info\", \"warn\", \"error\"];\n\ndescribe(\"Logger\", () => {\n  let savedConsole: any[];\n  let savedLevel: LogLevel;\n  let savedOutputs: LogOutput[];\n\n  beforeAll(() => {\n    savedConsole = [];\n    logMethods.forEach((m) => {\n      savedConsole[m] = console[m];\n      console[m] = () => {};\n    });\n    savedLevel = Logger.level;\n    savedOutputs = Logger.outputs;\n  });\n\n  beforeEach(() => {\n    Logger.level = LogLevel.debug;\n  });\n\n  afterAll(() => {\n    logMethods.forEach((m) => {\n      console[m] = savedConsole[m];\n    });\n    Logger.level = savedLevel;\n    Logger.outputs = savedOutputs;\n  });\n\n  it(\"should create an instance\", () => {\n    expect(new Logger()).toBeTruthy();\n  });\n\n  it(\"should add a new LogOutput and receives log entries\", () => {\n    // Arrange\n    const outputSpy = jasmine.createSpy(\"outputSpy\");\n    const log = new Logger(\"test\");\n\n    // Act\n    Logger.outputs.push(outputSpy);\n\n    log.debug(\"d\");\n    log.info(\"i\");\n    log.warn(\"w\");\n    log.error(\"e\", { error: true });\n\n    // Assert\n    expect(outputSpy).toHaveBeenCalled();\n    expect(outputSpy.calls.count()).toBe(4);\n    expect(outputSpy).toHaveBeenCalledWith(\"test\", LogLevel.debug, \"d\");\n    expect(outputSpy).toHaveBeenCalledWith(\"test\", LogLevel.info, \"i\");\n    expect(outputSpy).toHaveBeenCalledWith(\"test\", LogLevel.warning, \"w\");\n    expect(outputSpy).toHaveBeenCalledWith(\"test\", LogLevel.error, \"e\", { error: true });\n  });\n\n  it(\"should add a new LogOutput and receives only production log entries\", () => {\n    // Arrange\n    const outputSpy = jasmine.createSpy(\"outputSpy\");\n    const log = new Logger(\"test\");\n\n    // Act\n    Logger.outputs.push(outputSpy);\n    Logger.enableProductionMode();\n\n    log.debug(\"d\");\n    log.info(\"i\");\n    log.warn(\"w\");\n    log.error(\"e\", { error: true });\n\n    // Assert\n    expect(outputSpy).toHaveBeenCalled();\n    expect(outputSpy.calls.count()).toBe(2);\n    expect(outputSpy).toHaveBeenCalledWith(\"test\", LogLevel.warning, \"w\");\n    expect(outputSpy).toHaveBeenCalledWith(\"test\", LogLevel.error, \"e\", { error: true });\n  });\n});\n"],"version":3}