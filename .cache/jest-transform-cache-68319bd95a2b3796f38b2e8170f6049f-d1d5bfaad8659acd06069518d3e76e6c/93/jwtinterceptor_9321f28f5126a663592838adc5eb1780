75feae9b8b3ce25a029080c1e24fdcd2
"use strict";

/* istanbul ignore next */
function cov_26a03gb19q() {
  var path = "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/jwt-interceptor.ts";
  var hash = "ee17cbd9912c59db57799b8f6e2c601fbd0d1358";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/jwt-interceptor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "5": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 55
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 16,
          column: 11
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "8": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "9": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 29
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 10
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/jwt-interceptor.ts",
      mappings: ";;;;AAAA,wCAA2C;AAK3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAG3B;QAFA,aAAQ,GAAG,8BAA8B,CAAC;IAE3B,CAAC;IAEhB,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,sBAAsB;QACtB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,UAAU,EAAE;gBACV,aAAa,EAAE,cAAc;aAC9B;SACF,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;CACF,CAAA;AAfY,gBAAgB;IAD5B,iBAAU,EAAE;;GACA,gBAAgB,CAe5B;AAfY,4CAAgB",
      names: [],
      sources: ["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/jwt-interceptor.ts"],
      sourcesContent: ["import { Injectable } from \"@angular/core\";\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  logStyle = \"color: red; font-size: 1rem;\";\n\n  constructor() {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add a custom header\n    request = request.clone({\n      setHeaders: {\n        authorization: \"Bearer token\",\n      },\n    });\n\n    return next.handle(request);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ee17cbd9912c59db57799b8f6e2c601fbd0d1358"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26a03gb19q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_26a03gb19q();
cov_26a03gb19q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_26a03gb19q().s[1]++;
exports.TokenInterceptor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_26a03gb19q().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_26a03gb19q().s[3]++, require("@angular/core"));

/* istanbul ignore next */
cov_26a03gb19q().s[4]++;
let TokenInterceptor = class TokenInterceptor {
  constructor() {
    /* istanbul ignore next */
    cov_26a03gb19q().f[0]++;
    cov_26a03gb19q().s[5]++;
    this.logStyle = "color: red; font-size: 1rem;";
  }

  intercept(request, next) {
    /* istanbul ignore next */
    cov_26a03gb19q().f[1]++;
    cov_26a03gb19q().s[6]++;
    // add a custom header
    request = request.clone({
      setHeaders: {
        authorization: "Bearer token"
      }
    });

    /* istanbul ignore next */
    cov_26a03gb19q().s[7]++;
    return next.handle(request);
  }

};

/* istanbul ignore next */
cov_26a03gb19q().s[8]++;
TokenInterceptor = tslib_1.__decorate([core_1.Injectable(), tslib_1.__metadata("design:paramtypes", [])], TokenInterceptor);

/* istanbul ignore next */
cov_26a03gb19q().s[9]++;
exports.TokenInterceptor = TokenInterceptor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sLmt1emVua28vUEVSU09OQUwvbmctc3RhcnQvc3JjL2FwcC9AY29yZS9pbnRlcmNlcHRvci9qd3QtaW50ZXJjZXB0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFoQlAsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7Ozs7QUFLQSxJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFiLENBQTZCO0FBRzNCLEVBQUEsV0FBQSxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBRkEsU0FBQSxRQUFBLEdBQVcsOEJBQVg7QUFFZ0I7O0FBRWhCLEVBQUEsU0FBUyxDQUFDLE9BQUQsRUFBNEIsSUFBNUIsRUFBNkM7QUFBQTtBQUFBO0FBQUE7QUFDcEQ7QUFDQSxJQUFBLE9BQU8sR0FBRyxPQUFPLENBQUMsS0FBUixDQUFjO0FBQ3RCLE1BQUEsVUFBVSxFQUFFO0FBQ1YsUUFBQSxhQUFhLEVBQUU7QUFETDtBQURVLEtBQWQsQ0FBVjs7QUFGb0Q7QUFBQTtBQVFwRCxXQUFPLElBQUksQ0FBQyxNQUFMLENBQVksT0FBWixDQUFQO0FBQ0Q7O0FBZDBCLENBQTdCOzs7O0FBQWEsZ0JBQWdCLEdBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUQ1QixNQUFBLENBQUEsVUFBQSxFQUM0QixFLDJDQUFBLENBQUEsRUFBaEIsZ0JBQWdCLENBQWhCOzs7O0FBQUEsT0FBQSxDQUFBLGdCQUFBLEdBQUEsZ0JBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEh0dHBFdmVudCwgSHR0cEludGVyY2VwdG9yLCBIdHRwSGFuZGxlciwgSHR0cFJlcXVlc3QgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSBcInJ4anNcIjtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRva2VuSW50ZXJjZXB0b3IgaW1wbGVtZW50cyBIdHRwSW50ZXJjZXB0b3Ige1xuICBsb2dTdHlsZSA9IFwiY29sb3I6IHJlZDsgZm9udC1zaXplOiAxcmVtO1wiO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBpbnRlcmNlcHQocmVxdWVzdDogSHR0cFJlcXVlc3Q8YW55PiwgbmV4dDogSHR0cEhhbmRsZXIpOiBPYnNlcnZhYmxlPEh0dHBFdmVudDxhbnk+PiB7XG4gICAgLy8gYWRkIGEgY3VzdG9tIGhlYWRlclxuICAgIHJlcXVlc3QgPSByZXF1ZXN0LmNsb25lKHtcbiAgICAgIHNldEhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCJCZWFyZXIgdG9rZW5cIixcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gbmV4dC5oYW5kbGUocmVxdWVzdCk7XG4gIH1cbn1cbiJdfQ==