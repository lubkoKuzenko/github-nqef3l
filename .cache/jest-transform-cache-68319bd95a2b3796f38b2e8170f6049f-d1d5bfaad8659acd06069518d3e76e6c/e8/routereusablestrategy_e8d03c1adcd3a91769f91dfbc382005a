000bc77b1e2c088989d8e86e6723c1e5
"use strict";

/* istanbul ignore next */
function cov_2h543wpv2l() {
  var path = "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/route-reusable-strategy.ts";
  var hash = "a4f2912978b68e150e75e006a9608fac6aa65504";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/route-reusable-strategy.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 39
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 39
        }
      },
      "5": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 21
        }
      },
      "7": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 21
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 20
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "10": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 55
        }
      },
      "12": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 44,
          column: 26
        }
      },
      "13": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 34
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 33
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 23
          }
        }, {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 55
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/route-reusable-strategy.ts",
      mappings: ";;;;AAAA,4CAAkG;AAClG,wCAA2C;AAE3C;;;;;;;;;;;;;;GAcG;AAEH,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,2BAAkB;IACpD,YAAY,CAAC,KAA6B;QAC/C,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,KAAK,CAAC,KAA6B,EAAE,YAAwC,IAAS,CAAC;IAEvF,YAAY,CAAC,KAA6B;QAC/C,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,QAAQ,CAAC,KAA6B;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,gBAAgB,CAAC,MAA8B,EAAE,IAA4B;QAClF,4EAA4E;QAC5E,sEAAsE;QACtE,IAAI,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC/C,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SAC7B;QACD,OAAO,MAAM,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,CAAC;IACjD,CAAC;CACF,CAAA;AAvBY,qBAAqB;IADjC,iBAAU,EAAE;GACA,qBAAqB,CAuBjC;AAvBY,sDAAqB",
      names: [],
      sources: ["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/route-reusable-strategy.ts"],
      sourcesContent: ["import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n *\n * * @example ```json\n *   {\n *       path: \"overview\",\n *       component: OverviewComponent,\n *        data: {\n *            noReuse: true,\n *        },\n *    },\n * ```\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // Reuse the route if the RouteConfig is the same, or if both routes use the\n    // same component, because the latter can have different RouteConfigs.\n    if (future.data && Boolean(future.data.noReuse)) {\n      return !future.data.noReuse;\n    }\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a4f2912978b68e150e75e006a9608fac6aa65504"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2h543wpv2l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2h543wpv2l();
cov_2h543wpv2l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2h543wpv2l().s[1]++;
exports.RouteReusableStrategy = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2h543wpv2l().s[2]++, require("tslib"));
const router_1 =
/* istanbul ignore next */
(cov_2h543wpv2l().s[3]++, require("@angular/router"));
const core_1 =
/* istanbul ignore next */
(cov_2h543wpv2l().s[4]++, require("@angular/core"));
/**
 * A route strategy allowing for explicit route reuse.
 * Used as a workaround for https://github.com/angular/angular/issues/18374
 * To reuse a given route, add `data: { reuse: true }` to the route definition.
 *
 * * @example ```json
 *   {
 *       path: "overview",
 *       component: OverviewComponent,
 *        data: {
 *            noReuse: true,
 *        },
 *    },
 * ```
 */

/* istanbul ignore next */
cov_2h543wpv2l().s[5]++;
let RouteReusableStrategy = class RouteReusableStrategy extends router_1.RouteReuseStrategy {
  shouldDetach(route) {
    /* istanbul ignore next */
    cov_2h543wpv2l().f[0]++;
    cov_2h543wpv2l().s[6]++;
    return false;
  }

  store(route, detachedTree) {
    /* istanbul ignore next */
    cov_2h543wpv2l().f[1]++;
  }

  shouldAttach(route) {
    /* istanbul ignore next */
    cov_2h543wpv2l().f[2]++;
    cov_2h543wpv2l().s[7]++;
    return false;
  }

  retrieve(route) {
    /* istanbul ignore next */
    cov_2h543wpv2l().f[3]++;
    cov_2h543wpv2l().s[8]++;
    return null;
  }

  shouldReuseRoute(future, curr) {
    /* istanbul ignore next */
    cov_2h543wpv2l().f[4]++;
    cov_2h543wpv2l().s[9]++;

    // Reuse the route if the RouteConfig is the same, or if both routes use the
    // same component, because the latter can have different RouteConfigs.
    if (
    /* istanbul ignore next */
    (cov_2h543wpv2l().b[1][0]++, future.data) &&
    /* istanbul ignore next */
    (cov_2h543wpv2l().b[1][1]++, Boolean(future.data.noReuse))) {
      /* istanbul ignore next */
      cov_2h543wpv2l().b[0][0]++;
      cov_2h543wpv2l().s[10]++;
      return !future.data.noReuse;
    } else
    /* istanbul ignore next */
    {
      cov_2h543wpv2l().b[0][1]++;
    }

    cov_2h543wpv2l().s[11]++;
    return future.routeConfig === curr.routeConfig;
  }

};

/* istanbul ignore next */
cov_2h543wpv2l().s[12]++;
RouteReusableStrategy = tslib_1.__decorate([core_1.Injectable()], RouteReusableStrategy);

/* istanbul ignore next */
cov_2h543wpv2l().s[13]++;
exports.RouteReusableStrategy = RouteReusableStrategy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sLmt1emVua28vUEVSU09OQUwvbmctc3RhcnQvc3JjL2FwcC9AY29yZS9yb3V0ZS1yZXVzYWJsZS1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFBLFFBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUVBOzs7Ozs7Ozs7Ozs7OztBQWNHOzs7O0FBRUgsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBYixTQUEyQyxRQUFBLENBQUEsa0JBQTNDLENBQTZEO0FBQ3BELEVBQUEsWUFBWSxDQUFDLEtBQUQsRUFBOEI7QUFBQTtBQUFBO0FBQUE7QUFDL0MsV0FBTyxLQUFQO0FBQ0Q7O0FBRU0sRUFBQSxLQUFLLENBQUMsS0FBRCxFQUFnQyxZQUFoQyxFQUF3RTtBQUFBO0FBQUE7QUFBVTs7QUFFdkYsRUFBQSxZQUFZLENBQUMsS0FBRCxFQUE4QjtBQUFBO0FBQUE7QUFBQTtBQUMvQyxXQUFPLEtBQVA7QUFDRDs7QUFFTSxFQUFBLFFBQVEsQ0FBQyxLQUFELEVBQThCO0FBQUE7QUFBQTtBQUFBO0FBQzNDLFdBQU8sSUFBUDtBQUNEOztBQUVNLEVBQUEsZ0JBQWdCLENBQUMsTUFBRCxFQUFpQyxJQUFqQyxFQUE2RDtBQUFBO0FBQUE7QUFBQTs7QUFDbEY7QUFDQTtBQUNBO0FBQUk7QUFBQSxpQ0FBQSxNQUFNLENBQUMsSUFBUDtBQUFBO0FBQUEsaUNBQWUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFQLENBQVksT0FBYixDQUF0QixDQUFKLEVBQWlEO0FBQUE7QUFBQTtBQUFBO0FBQy9DLGFBQU8sQ0FBQyxNQUFNLENBQUMsSUFBUCxDQUFZLE9BQXBCO0FBQ0QsS0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUhrRjtBQU1sRixXQUFPLE1BQU0sQ0FBQyxXQUFQLEtBQXVCLElBQUksQ0FBQyxXQUFuQztBQUNEOztBQXRCMEQsQ0FBN0Q7Ozs7QUFBYSxxQkFBcUIsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBRGpDLE1BQUEsQ0FBQSxVQUFBLEVBQ2lDLENBQUEsRUFBckIscUJBQXFCLENBQXJCOzs7O0FBQUEsT0FBQSxDQUFBLHFCQUFBLEdBQUEscUJBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBEZXRhY2hlZFJvdXRlSGFuZGxlLCBSb3V0ZVJldXNlU3RyYXRlZ3kgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuLyoqXG4gKiBBIHJvdXRlIHN0cmF0ZWd5IGFsbG93aW5nIGZvciBleHBsaWNpdCByb3V0ZSByZXVzZS5cbiAqIFVzZWQgYXMgYSB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8xODM3NFxuICogVG8gcmV1c2UgYSBnaXZlbiByb3V0ZSwgYWRkIGBkYXRhOiB7IHJldXNlOiB0cnVlIH1gIHRvIHRoZSByb3V0ZSBkZWZpbml0aW9uLlxuICpcbiAqICogQGV4YW1wbGUgYGBganNvblxuICogICB7XG4gKiAgICAgICBwYXRoOiBcIm92ZXJ2aWV3XCIsXG4gKiAgICAgICBjb21wb25lbnQ6IE92ZXJ2aWV3Q29tcG9uZW50LFxuICogICAgICAgIGRhdGE6IHtcbiAqICAgICAgICAgICAgbm9SZXVzZTogdHJ1ZSxcbiAqICAgICAgICB9LFxuICogICAgfSxcbiAqIGBgYFxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUm91dGVSZXVzYWJsZVN0cmF0ZWd5IGV4dGVuZHMgUm91dGVSZXVzZVN0cmF0ZWd5IHtcbiAgcHVibGljIHNob3VsZERldGFjaChyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHB1YmxpYyBzdG9yZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgZGV0YWNoZWRUcmVlOiBEZXRhY2hlZFJvdXRlSGFuZGxlIHwgbnVsbCk6IHZvaWQge31cblxuICBwdWJsaWMgc2hvdWxkQXR0YWNoKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcHVibGljIHJldHJpZXZlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogRGV0YWNoZWRSb3V0ZUhhbmRsZSB8IG51bGwge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcHVibGljIHNob3VsZFJldXNlUm91dGUoZnV0dXJlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBjdXJyOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgLy8gUmV1c2UgdGhlIHJvdXRlIGlmIHRoZSBSb3V0ZUNvbmZpZyBpcyB0aGUgc2FtZSwgb3IgaWYgYm90aCByb3V0ZXMgdXNlIHRoZVxuICAgIC8vIHNhbWUgY29tcG9uZW50LCBiZWNhdXNlIHRoZSBsYXR0ZXIgY2FuIGhhdmUgZGlmZmVyZW50IFJvdXRlQ29uZmlncy5cbiAgICBpZiAoZnV0dXJlLmRhdGEgJiYgQm9vbGVhbihmdXR1cmUuZGF0YS5ub1JldXNlKSkge1xuICAgICAgcmV0dXJuICFmdXR1cmUuZGF0YS5ub1JldXNlO1xuICAgIH1cbiAgICByZXR1cm4gZnV0dXJlLnJvdXRlQ29uZmlnID09PSBjdXJyLnJvdXRlQ29uZmlnO1xuICB9XG59XG4iXX0=