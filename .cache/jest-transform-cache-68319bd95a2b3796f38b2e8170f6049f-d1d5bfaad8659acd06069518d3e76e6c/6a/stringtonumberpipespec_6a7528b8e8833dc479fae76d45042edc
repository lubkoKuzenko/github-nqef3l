4419ccf1925568aa1e03444740200afe
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const string_to_number_pipe_1 = require("./string-to-number.pipe");
const TEST_CASES = [
    { value: 12, result: 12 },
    { value: 12.2, result: 12.2 },
    { value: "12", result: 12 },
    { value: "", result: NaN },
    { value: " ", result: NaN },
    { value: "12a", result: NaN },
    { value: "vv12", result: NaN },
];
describe("ToNumberPipe", () => {
    const pipe = new string_to_number_pipe_1.ToNumberPipe();
    it("should create a pipe instance", () => {
        expect(pipe).toBeTruthy();
    });
    TEST_CASES.forEach(({ value, result }) => {
        it(`should match the ${value} with to ${result}`, () => {
            expect(pipe.transform(value)).toEqual(result);
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2wua3V6ZW5rby9QRVJTT05BTC9uZy1zdGFydC9zcmMvYXBwL3VuaXQtdGVzdHMvcGlwZXMvc3RyaW5nLXRvLW51bWJlci5waXBlLnNwZWMudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxtRUFBdUQ7QUFFdkQsTUFBTSxVQUFVLEdBQUc7SUFDakIsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7SUFDekIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7SUFDN0IsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7SUFDM0IsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUU7SUFDMUIsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUU7SUFDM0IsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUU7SUFDN0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUU7Q0FDL0IsQ0FBQztBQUVGLFFBQVEsQ0FBQyxjQUFjLEVBQUUsR0FBRyxFQUFFO0lBQzVCLE1BQU0sSUFBSSxHQUFHLElBQUksb0NBQVksRUFBRSxDQUFDO0lBQ2hDLEVBQUUsQ0FBQywrQkFBK0IsRUFBRSxHQUFHLEVBQUU7UUFDdkMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzVCLENBQUMsQ0FBQyxDQUFDO0lBRUgsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7UUFDdkMsRUFBRSxDQUFDLG9CQUFvQixLQUFLLFlBQVksTUFBTSxFQUFFLEVBQUUsR0FBRyxFQUFFO1lBQ3JELE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbC5rdXplbmtvL1BFUlNPTkFML25nLXN0YXJ0L3NyYy9hcHAvdW5pdC10ZXN0cy9waXBlcy9zdHJpbmctdG8tbnVtYmVyLnBpcGUuc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUb051bWJlclBpcGUgfSBmcm9tIFwiLi9zdHJpbmctdG8tbnVtYmVyLnBpcGVcIjtcblxuY29uc3QgVEVTVF9DQVNFUyA9IFtcbiAgeyB2YWx1ZTogMTIsIHJlc3VsdDogMTIgfSxcbiAgeyB2YWx1ZTogMTIuMiwgcmVzdWx0OiAxMi4yIH0sXG4gIHsgdmFsdWU6IFwiMTJcIiwgcmVzdWx0OiAxMiB9LFxuICB7IHZhbHVlOiBcIlwiLCByZXN1bHQ6IE5hTiB9LFxuICB7IHZhbHVlOiBcIiBcIiwgcmVzdWx0OiBOYU4gfSxcbiAgeyB2YWx1ZTogXCIxMmFcIiwgcmVzdWx0OiBOYU4gfSxcbiAgeyB2YWx1ZTogXCJ2djEyXCIsIHJlc3VsdDogTmFOIH0sXG5dO1xuXG5kZXNjcmliZShcIlRvTnVtYmVyUGlwZVwiLCAoKSA9PiB7XG4gIGNvbnN0IHBpcGUgPSBuZXcgVG9OdW1iZXJQaXBlKCk7XG4gIGl0KFwic2hvdWxkIGNyZWF0ZSBhIHBpcGUgaW5zdGFuY2VcIiwgKCkgPT4ge1xuICAgIGV4cGVjdChwaXBlKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIFRFU1RfQ0FTRVMuZm9yRWFjaCgoeyB2YWx1ZSwgcmVzdWx0IH0pID0+IHtcbiAgICBpdChgc2hvdWxkIG1hdGNoIHRoZSAke3ZhbHVlfSB3aXRoIHRvICR7cmVzdWx0fWAsICgpID0+IHtcbiAgICAgIGV4cGVjdChwaXBlLnRyYW5zZm9ybSh2YWx1ZSkpLnRvRXF1YWwocmVzdWx0KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==