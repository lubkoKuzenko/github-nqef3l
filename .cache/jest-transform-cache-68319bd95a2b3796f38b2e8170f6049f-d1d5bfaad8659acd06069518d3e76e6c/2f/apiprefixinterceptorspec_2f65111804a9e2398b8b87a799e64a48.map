{"file":"/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/api-prefix.interceptor.spec.ts","mappings":";;AACA,mDAAgD;AAChD,0DAA8F;AAC9F,+CAAqE;AAErE,kDAA+C;AAC/C,qEAAgE;AAEhE,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,IAAI,IAAgB,CAAC;IACrB,IAAI,QAA+B,CAAC;IAEpC,UAAU,CAAC,GAAG,EAAE;QACd,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE,CAAC,iCAAuB,CAAC;YAClC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,wBAAiB;oBAC1B,QAAQ,EAAE,6CAAoB;oBAC9B,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC,CAAC;QAEH,IAAI,GAAG,iBAAO,CAAC,MAAM,CAAC,iBAAU,CAAC,CAAC;QAClC,QAAQ,GAAG,iBAAO,CAAC,MAAM,CAAC,+BAAoD,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE,MAAM;QACN,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;QAE9B,SAAS;QACT,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,yBAAW,CAAC,SAAS,GAAG,OAAO,EAAE,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE,MAAM;QACN,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,SAAS,EAAE,CAAC;QAEhD,SAAS;QACT,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,yBAAyB,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/interceptor/api-prefix.interceptor.spec.ts"],"sourcesContent":["import { Type } from \"@angular/core\";\nimport { TestBed } from \"@angular/core/testing\";\nimport { HttpClientTestingModule, HttpTestingController } from \"@angular/common/http/testing\";\nimport { HTTP_INTERCEPTORS, HttpClient } from \"@angular/common/http\";\n\nimport { environment } from \"@env/environment\";\nimport { ApiPrefixInterceptor } from \"./api-prefix.interceptor\";\n\ndescribe(\"ApiPrefixInterceptor\", () => {\n  let http: HttpClient;\n  let httpMock: HttpTestingController;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ApiPrefixInterceptor,\n          multi: true,\n        },\n      ],\n    });\n\n    http = TestBed.inject(HttpClient);\n    httpMock = TestBed.inject(HttpTestingController as Type<HttpTestingController>);\n  });\n\n  afterEach(() => {\n    httpMock.verify();\n  });\n\n  it(\"should prepend environment.serverUrl to the request url\", () => {\n    // Act\n    http.get(\"/toto\").subscribe();\n\n    // Assert\n    httpMock.expectOne({ url: environment.serverUrl + \"/toto\" });\n  });\n\n  it(\"should not prepend environment.serverUrl to request url\", () => {\n    // Act\n    http.get(\"hTtPs://domain.com/toto\").subscribe();\n\n    // Assert\n    httpMock.expectOne({ url: \"hTtPs://domain.com/toto\" });\n  });\n});\n"],"version":3}