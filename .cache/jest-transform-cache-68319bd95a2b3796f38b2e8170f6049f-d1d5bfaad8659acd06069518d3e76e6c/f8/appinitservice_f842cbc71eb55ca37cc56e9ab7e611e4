7b199c97e716570dede3ff8a92fad297
"use strict";

/* istanbul ignore next */
function cov_1ix18xgmrz() {
  var path = "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/services/app-init.service.ts";
  var hash = "340e89955f64fe1277308977f8240c0f8c30b80a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/services/app-init.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 16,
          column: 11
        }
      },
      "6": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 56
        }
      },
      "7": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 15,
          column: 20
        }
      },
      "8": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 55
        }
      },
      "9": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "10": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "11": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 21
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 9,
            column: 28
          }
        },
        loc: {
          start: {
            line: 9,
            column: 40
          },
          end: {
            line: 16,
            column: 9
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 24
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 15,
            column: 13
          }
        },
        line: 12
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/services/app-init.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAG3C,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,gBAAe,CAAC;IAChB,IAAI;QACF,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,oCAAoC;YACpC,UAAU,CAAC,GAAG,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAZY,cAAc;IAD1B,iBAAU,EAAE;;GACA,cAAc,CAY1B;AAZY,wCAAc",
      names: [],
      sources: ["/Users/l.kuzenko/PERSONAL/ng-start/src/app/@core/services/app-init.service.ts"],
      sourcesContent: ["import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class AppInitService {\n  constructor() {}\n  load() {\n    return new Promise<void>((resolve) => {\n      console.log(\"AppInitService.init() called\");\n      // do your initialisation stuff here\n      setTimeout(() => {\n        console.log(\"AppInitService Finished\");\n        resolve();\n      }, 500);\n    });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "340e89955f64fe1277308977f8240c0f8c30b80a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ix18xgmrz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1ix18xgmrz();
cov_1ix18xgmrz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1ix18xgmrz().s[1]++;
exports.AppInitService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1ix18xgmrz().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1ix18xgmrz().s[3]++, require("@angular/core"));

/* istanbul ignore next */
cov_1ix18xgmrz().s[4]++;
let AppInitService = class AppInitService {
  constructor() {
    /* istanbul ignore next */
    cov_1ix18xgmrz().f[0]++;
  }

  load() {
    /* istanbul ignore next */
    cov_1ix18xgmrz().f[1]++;
    cov_1ix18xgmrz().s[5]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1ix18xgmrz().f[2]++;
      cov_1ix18xgmrz().s[6]++;
      console.log("AppInitService.init() called"); // do your initialisation stuff here

      /* istanbul ignore next */
      cov_1ix18xgmrz().s[7]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1ix18xgmrz().f[3]++;
        cov_1ix18xgmrz().s[8]++;
        console.log("AppInitService Finished");

        /* istanbul ignore next */
        cov_1ix18xgmrz().s[9]++;
        resolve();
      }, 500);
    });
  }

};

/* istanbul ignore next */
cov_1ix18xgmrz().s[10]++;
AppInitService = tslib_1.__decorate([core_1.Injectable(), tslib_1.__metadata("design:paramtypes", [])], AppInitService);

/* istanbul ignore next */
cov_1ix18xgmrz().s[11]++;
exports.AppInitService = AppInitService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sLmt1emVua28vUEVSU09OQUwvbmctc3RhcnQvc3JjL2FwcC9AY29yZS9zZXJ2aWNlcy9hcHAtaW5pdC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFhTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFiUCxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTs7OztBQUdBLElBQWEsY0FBYyxHQUEzQixNQUFhLGNBQWIsQ0FBMkI7QUFDekIsRUFBQSxXQUFBLEdBQUE7QUFBQTtBQUFBO0FBQWdCOztBQUNoQixFQUFBLElBQUksR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNGLFdBQU8sSUFBSSxPQUFKLENBQW1CLE9BQUQsSUFBWTtBQUFBO0FBQUE7QUFBQTtBQUNuQyxNQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksOEJBQVosRUFEbUMsQ0FFbkM7O0FBRm1DO0FBQUE7QUFHbkMsTUFBQSxVQUFVLENBQUMsTUFBSztBQUFBO0FBQUE7QUFBQTtBQUNkLFFBQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSx5QkFBWjs7QUFEYztBQUFBO0FBRWQsUUFBQSxPQUFPO0FBQ1IsT0FIUyxFQUdQLEdBSE8sQ0FBVjtBQUlELEtBUE0sQ0FBUDtBQVFEOztBQVh3QixDQUEzQjs7OztBQUFhLGNBQWMsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBRDFCLE1BQUEsQ0FBQSxVQUFBLEVBQzBCLEUsMkNBQUEsQ0FBQSxFQUFkLGNBQWMsQ0FBZDs7OztBQUFBLE9BQUEsQ0FBQSxjQUFBLEdBQUEsY0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXBwSW5pdFNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcigpIHt9XG4gIGxvYWQoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcIkFwcEluaXRTZXJ2aWNlLmluaXQoKSBjYWxsZWRcIik7XG4gICAgICAvLyBkbyB5b3VyIGluaXRpYWxpc2F0aW9uIHN0dWZmIGhlcmVcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkFwcEluaXRTZXJ2aWNlIEZpbmlzaGVkXCIpO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9LCA1MDApO1xuICAgIH0pO1xuICB9XG59XG4iXX0=