{"version":3,"sources":["/Users/l.kuzenko/PERSONAL/ng-start/src/app/unit-cards/store/cards.store.ts"],"names":[],"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","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Observable } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport { Card } from \"../interfaces\";\nimport { CardsService } from \"../services/cards.service\";\n\n// The state model\nexport interface CardsState {\n  cards: Card[];\n  loading: boolean;\n}\n\nconst defaultState: CardsState = {\n  cards: [],\n  loading: false,\n};\n\n@Injectable()\nexport class CardsStore extends ComponentStore<CardsState> {\n  constructor(public cardsService: CardsService) {\n    super(defaultState);\n  }\n\n  // SELECTORS\n  readonly cards$: Observable<Card[]> = this.select((state) => state.cards);\n  readonly loading$: Observable<boolean> = this.select((state) => state.loading);\n\n  // EFFECTS\n  public readonly loadCards = this.effect((trigger$: Observable<void>) =>\n    trigger$.pipe(\n      switchMap(() => {\n        this.patchState({ loading: true });\n\n        return this.cardsService.getCards().pipe(\n          tapResponse(\n            (cards) => this.patchState((state) => ({ ...state, cards: cards || [], loading: false })),\n            (_) => this.patchState({ cards: [] }),\n          ),\n        );\n      }),\n    ),\n  );\n\n  public readonly addCard = this.effect((trigger$: Observable<Card>) =>\n    trigger$.pipe(\n      switchMap((card: Card) => {\n        this.patchState({ loading: true });\n\n        return this.cardsService.addCard(card).pipe(\n          tapResponse(\n            (newCard: Card) =>\n              this.patchState((state) => ({\n                ...state,\n                cards: [...state.cards, newCard],\n                loading: false,\n              })),\n            (_) => this.patchState((state) => ({ cards: state.cards })),\n          ),\n        );\n      }),\n    ),\n  );\n\n  public readonly updateCard = this.effect((trigger$: Observable<Card>) =>\n    trigger$.pipe(\n      switchMap((card: Card) => {\n        this.patchState({ loading: true });\n\n        return this.cardsService.updateCard(card).pipe(\n          tapResponse(\n            () =>\n              this.patchState((state) => {\n                const updatedCards = state.cards.map((c: Card) => (c.id === card.id ? { ...c, ...card } : c));\n\n                return {\n                  ...state,\n                  cards: [...updatedCards],\n                  loading: false,\n                };\n              }),\n            (_) => this.patchState((state) => ({ cards: state.cards })),\n          ),\n        );\n      }),\n    ),\n  );\n\n  public readonly removeCard = this.effect((trigger$: Observable<string>) =>\n    trigger$.pipe(\n      switchMap((cardId: string) => {\n        this.patchState({ loading: true });\n\n        return this.cardsService.deleteCard(cardId).pipe(\n          tapResponse(\n            () =>\n              this.patchState((state) => {\n                const updatedCards = state.cards.filter((card) => card.id !== cardId);\n\n                return {\n                  ...state,\n                  cards: [...updatedCards],\n                  loading: false,\n                };\n              }),\n            (_) => this.patchState((state) => ({ cards: state.cards })),\n          ),\n        );\n      }),\n    ),\n  );\n}\n"]}