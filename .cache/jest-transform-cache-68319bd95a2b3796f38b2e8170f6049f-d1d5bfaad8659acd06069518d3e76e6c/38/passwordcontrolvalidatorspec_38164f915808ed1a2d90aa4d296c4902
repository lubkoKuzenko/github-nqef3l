a830f568c1efca50f1cbad25b69e960b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const forms_1 = require("@angular/forms");
const password_control_validator_1 = require("./password-control.validator");
/*
A minimum of 7 characters
At least one UPPERCASE letter
At least one lowercase letter
At least one number
*/
const TEST_CASES = [
    { test_case: "string length is less than 7 characters", value: "12345", result: { wrongPasswordFormat: true } },
    { test_case: "string do not have UPPERCASE letter", value: "12345qwe", result: { wrongPasswordFormat: true } },
    { test_case: "string do not have lowercase letter", value: "12345WWW", result: { wrongPasswordFormat: true } },
    { test_case: "string do not have one number", value: "qweqweWWW", result: { wrongPasswordFormat: true } },
    { test_case: "string has correct value", value: "123qweQW", result: null },
];
describe("PasswordValidators", () => {
    const isPasswordInCorrectFormatValidator = password_control_validator_1.PasswordValidators.isValueSatisfyFormatValidator();
    const control = new forms_1.FormControl("input");
    TEST_CASES.forEach(({ test_case, value, result }) => {
        it(`should return ${result} if input ${test_case}`, () => {
            control.setValue(value);
            expect(isPasswordInCorrectFormatValidator(control)).toEqual(result);
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2wua3V6ZW5rby9QRVJTT05BTC9uZy1zdGFydC9zcmMvYXBwL3VuaXQtdGVzdHMvZm9ybS12YWxpZGF0b3JzL3Bhc3N3b3JkLWNvbnRyb2wudmFsaWRhdG9yLnNwZWMudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSwwQ0FBNkM7QUFDN0MsNkVBQWtFO0FBRWxFOzs7OztFQUtFO0FBRUYsTUFBTSxVQUFVLEdBQUc7SUFDakIsRUFBRSxTQUFTLEVBQUUseUNBQXlDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUMvRyxFQUFFLFNBQVMsRUFBRSxxQ0FBcUMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxFQUFFLG1CQUFtQixFQUFFLElBQUksRUFBRSxFQUFFO0lBQzlHLEVBQUUsU0FBUyxFQUFFLHFDQUFxQyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLEVBQUU7SUFDOUcsRUFBRSxTQUFTLEVBQUUsK0JBQStCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUN6RyxFQUFFLFNBQVMsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Q0FDM0UsQ0FBQztBQUVGLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxHQUFHLEVBQUU7SUFDbEMsTUFBTSxrQ0FBa0MsR0FBRywrQ0FBa0IsQ0FBQyw2QkFBNkIsRUFBRSxDQUFDO0lBQzlGLE1BQU0sT0FBTyxHQUFHLElBQUksbUJBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUV6QyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7UUFDbEQsRUFBRSxDQUFDLGlCQUFpQixNQUFNLGFBQWEsU0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFO1lBQ3ZELE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDeEIsTUFBTSxDQUFDLGtDQUFrQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3RFLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbC5rdXplbmtvL1BFUlNPTkFML25nLXN0YXJ0L3NyYy9hcHAvdW5pdC10ZXN0cy9mb3JtLXZhbGlkYXRvcnMvcGFzc3dvcmQtY29udHJvbC52YWxpZGF0b3Iuc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3JtQ29udHJvbCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgUGFzc3dvcmRWYWxpZGF0b3JzIH0gZnJvbSBcIi4vcGFzc3dvcmQtY29udHJvbC52YWxpZGF0b3JcIjtcblxuLypcbkEgbWluaW11bSBvZiA3IGNoYXJhY3RlcnNcbkF0IGxlYXN0IG9uZSBVUFBFUkNBU0UgbGV0dGVyXG5BdCBsZWFzdCBvbmUgbG93ZXJjYXNlIGxldHRlclxuQXQgbGVhc3Qgb25lIG51bWJlclxuKi9cblxuY29uc3QgVEVTVF9DQVNFUyA9IFtcbiAgeyB0ZXN0X2Nhc2U6IFwic3RyaW5nIGxlbmd0aCBpcyBsZXNzIHRoYW4gNyBjaGFyYWN0ZXJzXCIsIHZhbHVlOiBcIjEyMzQ1XCIsIHJlc3VsdDogeyB3cm9uZ1Bhc3N3b3JkRm9ybWF0OiB0cnVlIH0gfSxcbiAgeyB0ZXN0X2Nhc2U6IFwic3RyaW5nIGRvIG5vdCBoYXZlIFVQUEVSQ0FTRSBsZXR0ZXJcIiwgdmFsdWU6IFwiMTIzNDVxd2VcIiwgcmVzdWx0OiB7IHdyb25nUGFzc3dvcmRGb3JtYXQ6IHRydWUgfSB9LFxuICB7IHRlc3RfY2FzZTogXCJzdHJpbmcgZG8gbm90IGhhdmUgbG93ZXJjYXNlIGxldHRlclwiLCB2YWx1ZTogXCIxMjM0NVdXV1wiLCByZXN1bHQ6IHsgd3JvbmdQYXNzd29yZEZvcm1hdDogdHJ1ZSB9IH0sXG4gIHsgdGVzdF9jYXNlOiBcInN0cmluZyBkbyBub3QgaGF2ZSBvbmUgbnVtYmVyXCIsIHZhbHVlOiBcInF3ZXF3ZVdXV1wiLCByZXN1bHQ6IHsgd3JvbmdQYXNzd29yZEZvcm1hdDogdHJ1ZSB9IH0sXG4gIHsgdGVzdF9jYXNlOiBcInN0cmluZyBoYXMgY29ycmVjdCB2YWx1ZVwiLCB2YWx1ZTogXCIxMjNxd2VRV1wiLCByZXN1bHQ6IG51bGwgfSxcbl07XG5cbmRlc2NyaWJlKFwiUGFzc3dvcmRWYWxpZGF0b3JzXCIsICgpID0+IHtcbiAgY29uc3QgaXNQYXNzd29yZEluQ29ycmVjdEZvcm1hdFZhbGlkYXRvciA9IFBhc3N3b3JkVmFsaWRhdG9ycy5pc1ZhbHVlU2F0aXNmeUZvcm1hdFZhbGlkYXRvcigpO1xuICBjb25zdCBjb250cm9sID0gbmV3IEZvcm1Db250cm9sKFwiaW5wdXRcIik7XG5cbiAgVEVTVF9DQVNFUy5mb3JFYWNoKCh7IHRlc3RfY2FzZSwgdmFsdWUsIHJlc3VsdCB9KSA9PiB7XG4gICAgaXQoYHNob3VsZCByZXR1cm4gJHtyZXN1bHR9IGlmIGlucHV0ICR7dGVzdF9jYXNlfWAsICgpID0+IHtcbiAgICAgIGNvbnRyb2wuc2V0VmFsdWUodmFsdWUpO1xuICAgICAgZXhwZWN0KGlzUGFzc3dvcmRJbkNvcnJlY3RGb3JtYXRWYWxpZGF0b3IoY29udHJvbCkpLnRvRXF1YWwocmVzdWx0KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==