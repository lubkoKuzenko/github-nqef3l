{"version":3,"sources":["/Users/l.kuzenko/PERSONAL/ng-start/src/app/unit-tests/unit-tests.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDI;;;;;;;;;;;;;;;;;;;;AAvDJ,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,OAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,MAAA,iBAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;AA8CA,IAAa,kBAAkB,GAA/B,MAAa,kBAAb,CAA+B;AAA/B,EAAA,WAAA,GAAA;AAAA;AAAA;AAAA;AACS,SAAA,IAAA,GAAO,IAAI,OAAA,CAAA,SAAJ,CAAc;AAC1B,MAAA,IAAI,EAAE,IAAI,OAAA,CAAA,WAAJ,CAAgB,MAAhB,EAAwB,CAAC,OAAA,CAAA,UAAA,CAAW,QAAZ,CAAxB,CADoB;AAE1B,MAAA,QAAQ,EAAE,IAAI,OAAA,CAAA,WAAJ,CAAgB,KAAhB,EAAuB,iBAAA,CAAA,kBAAA,CAAmB,6BAAnB,EAAvB;AAFgB,KAAd,CAAP;AAYR;;AAPQ,EAAA,OAAO,GAAA;AAAA;AAAA;AAAA;AACZ,IAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACD;;AAEM,EAAA,GAAG,CAAC,KAAD,EAAW;AAAA;AAAA;AAAA;AACnB,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACD;;AAZ4B,CAA/B;;;;AAAa,kBAAkB,GAAA,OAAA,CAAA,UAAA,CAAA,CA5C9B,MAAA,CAAA,SAAA,CAAU;AACT,EAAA,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCT;AA1CQ,CAAV,CA4C8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;AAAA,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { PasswordValidators } from \"./form-validators\";\n\n@Component({\n  template: `\n    <h1>Pipes</h1>\n\n    <div>\n      <b>toNumber</b>\n      => {{ \"123\" | toNumber }}\n    </div>\n    <div>\n      <b>orderBy</b>\n      => {{ [{ name: \"Haresh\" }, { name: \"Paresh\" }, { name: \"Amit\" }] | orderBy: \"name\" | json }}\n    </div>\n\n    <h1>Directives</h1>\n    <div>\n      <button [debounceTime]=\"500\" bbDebounceClick (debounceClick)=\"onClick()\">Debounce Click</button>\n    </div>\n\n    <h1>Presentational Component</h1>\n    <test-example [isSubTitleVisible]=\"true\" (click)=\"log($event)\"></test-example>\n    <test-example [isSubTitleVisible]=\"false\" (clickWithParam)=\"log($event)\"></test-example>\n\n    <h1>Form Control Validator</h1>\n    <form [formGroup]=\"form\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <mat-form-field>\n            <mat-label>Name</mat-label>\n            <input matInput type=\"text\" formControlName=\"name\" />\n            <bb-validation-message [control]=\"form.controls.name\"></bb-validation-message>\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-12\">\n          <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input matInput type=\"text\" formControlName=\"password\" />\n            <bb-validation-message [control]=\"form.controls.password\"></bb-validation-message>\n          </mat-form-field>\n        </div>\n      </div>\n    </form>\n  `,\n})\nexport class UnitTestsComponent {\n  public form = new FormGroup({\n    name: new FormControl(\"test\", [Validators.required]),\n    password: new FormControl(\"123\", PasswordValidators.isValueSatisfyFormatValidator()),\n  });\n\n  public onClick() {\n    console.log(\"test\");\n  }\n\n  public log(event: any) {\n    console.log(event);\n  }\n}\n"]}